{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kheragacy\\\\source\\\\repos\\\\KtsWebApp\\\\src\\\\Frontend\\\\react-app\\\\src\\\\common\\\\CheckAuth.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store';\nimport { verifyToken, selectAuth } from '../store/slice';\nimport { UnauthorizedPage } from '../ts/pages/UnauthorizedPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CheckAuth({\n  children,\n  accessLevel\n}) {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    token,\n    role,\n    isLoading\n  } = useAppSelector(selectAuth);\n  useEffect(() => {\n    dispatch(verifyToken());\n  }, [dispatch]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 27\n  }, this);\n  if (!token) return /*#__PURE__*/_jsxDEV(UnauthorizedPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n  const permission = role ? parseInt(role) : -1;\n  if (permission < accessLevel) return /*#__PURE__*/_jsxDEV(UnauthorizedPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 42\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n_s(CheckAuth, \"mNtt2ojB7jGsfZAdTam3XHxB3Ww=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = CheckAuth;\nvar _c;\n$RefreshReg$(_c, \"CheckAuth\");","map":{"version":3,"names":["useEffect","useAppDispatch","useAppSelector","verifyToken","selectAuth","UnauthorizedPage","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckAuth","children","accessLevel","_s","dispatch","token","role","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","permission","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/src/Frontend/react-app/src/common/CheckAuth.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../store';\r\nimport { verifyToken, selectAuth } from '../store/slice';\r\nimport { UnauthorizedPage } from '../ts/pages/UnauthorizedPage';\r\n\r\ninterface AuthProps {\r\n    children: React.ReactNode;\r\n    accessLevel: number;\r\n}\r\n\r\nexport function CheckAuth({ children, accessLevel }: AuthProps) {\r\n    const dispatch = useAppDispatch();\r\n    const { token, role, isLoading } = useAppSelector(selectAuth);\r\n\r\n    useEffect(() => {\r\n        dispatch(verifyToken());\r\n    }, [dispatch]);\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (!token) return <UnauthorizedPage />;\r\n\r\n    const permission = role ? parseInt(role) : -1;\r\n    if (permission < accessLevel) return <UnauthorizedPage />;\r\n\r\n    return <>{children}</>;\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,EAAEC,cAAc,QAAQ,UAAU;AACzD,SAASC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AACxD,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOhE,OAAO,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAuB,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAMC,QAAQ,GAAGb,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEc,KAAK;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGf,cAAc,CAACE,UAAU,CAAC;EAE7DJ,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACX,WAAW,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,IAAIG,SAAS,EAAE,oBAAOV,OAAA;IAAAI,QAAA,EAAK;EAAU;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAI,CAACN,KAAK,EAAE,oBAAOR,OAAA,CAACF,gBAAgB;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEvC,MAAMC,UAAU,GAAGN,IAAI,GAAGO,QAAQ,CAACP,IAAI,CAAC,GAAG,CAAC,CAAC;EAC7C,IAAIM,UAAU,GAAGV,WAAW,EAAE,oBAAOL,OAAA,CAACF,gBAAgB;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEzD,oBAAOd,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AAC1B;AAACE,EAAA,CAfeH,SAAS;EAAA,QACJT,cAAc,EACIC,cAAc;AAAA;AAAAsB,EAAA,GAFrCd,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}