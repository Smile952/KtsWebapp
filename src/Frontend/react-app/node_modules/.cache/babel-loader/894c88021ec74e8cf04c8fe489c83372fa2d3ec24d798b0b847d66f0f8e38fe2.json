{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"props\", \"steps\"],\n  _excluded2 = [\"ownerState\"];\nimport * as React from 'react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { PickersModalDialog } from \"../../components/PickersModalDialog.js\";\nimport { usePicker } from \"../usePicker/index.js\";\nimport { PickersLayout } from \"../../../PickersLayout/index.js\";\nimport { PickerProvider } from \"../../components/PickerProvider.js\";\nimport { PickerFieldUIContextProvider } from \"../../components/PickerFieldUI.js\";\nimport { createNonRangePickerStepNavigation } from \"../../utils/createNonRangePickerStepNavigation.js\";\n\n/**\n * Hook managing all the single-date mobile pickers:\n * - MobileDatePicker\n * - MobileDateTimePicker\n * - MobileTimePicker\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const useMobilePicker = _ref => {\n  let {\n      props,\n      steps\n    } = _ref,\n    pickerParams = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    slots,\n    slotProps: innerSlotProps,\n    label,\n    inputRef,\n    localeText\n  } = props;\n  const getStepNavigation = createNonRangePickerStepNavigation({\n    steps\n  });\n  const {\n    providerProps,\n    renderCurrentView,\n    ownerState\n  } = usePicker(_extends({}, pickerParams, {\n    props,\n    localeText,\n    autoFocusView: true,\n    viewContainerRole: 'dialog',\n    variant: 'mobile',\n    getStepNavigation\n  }));\n  const labelId = providerProps.privateContextValue.labelId;\n  const isToolbarHidden = innerSlotProps?.toolbar?.hidden ?? false;\n  const Field = slots.field;\n  const _useSlotProps = useSlotProps({\n      elementType: Field,\n      externalSlotProps: innerSlotProps?.field,\n      additionalProps: _extends({}, isToolbarHidden && {\n        id: labelId\n      }),\n      ownerState\n    }),\n    fieldProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded2);\n  const Layout = slots.layout ?? PickersLayout;\n  let labelledById = labelId;\n  if (isToolbarHidden) {\n    if (label) {\n      labelledById = `${labelId}-label`;\n    } else {\n      labelledById = undefined;\n    }\n  }\n  const slotProps = _extends({}, innerSlotProps, {\n    toolbar: _extends({}, innerSlotProps?.toolbar, {\n      titleId: labelId\n    }),\n    mobilePaper: _extends({\n      'aria-labelledby': labelledById\n    }, innerSlotProps?.mobilePaper)\n  });\n  const renderPicker = () => /*#__PURE__*/_jsx(PickerProvider, _extends({}, providerProps, {\n    children: /*#__PURE__*/_jsxs(PickerFieldUIContextProvider, {\n      slots: slots,\n      slotProps: slotProps,\n      inputRef: inputRef,\n      children: [/*#__PURE__*/_jsx(Field, _extends({}, fieldProps)), /*#__PURE__*/_jsx(PickersModalDialog, {\n        slots: slots,\n        slotProps: slotProps,\n        children: /*#__PURE__*/_jsx(Layout, _extends({}, slotProps?.layout, {\n          slots: slots,\n          slotProps: slotProps,\n          children: renderCurrentView()\n        }))\n      })]\n    })\n  }));\n  return {\n    renderPicker\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}