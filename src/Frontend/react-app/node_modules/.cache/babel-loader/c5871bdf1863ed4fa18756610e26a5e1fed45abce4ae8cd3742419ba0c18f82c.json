{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kheragacy\\\\source\\\\repos\\\\KtsWebApp\\\\KtsWebApp\\\\react-app\\\\src\\\\js\\\\App.js\";\nimport { Routes, Route } from \"react-router\";\nimport { routesConfig, ACCESS_LEVELS } from \"../common/routes\";\nimport { UnauthorizedPage } from \"./pages/UnauthorizedPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  const token = localStorage.getItem('token');\n  const role = localStorage.getItem('role');\n  synchronizeToken();\n  if (!token || !role) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(UnauthorizedPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n  let filteredRoutes = [...routesConfig];\n  if (role === ACCESS_LEVELS.PUBLIC) {\n    filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC);\n  } else if (role === ACCESS_LEVELS.USER) {\n    filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC || r.access === ACCESS_LEVELS.USER);\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: filteredRoutes.map(rout => /*#__PURE__*/_jsxDEV(Route, {\n      path: rout.path,\n      element: rout.element\n    }, rout.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nasync function synchronizeToken() {\n  const token = localStorage.getItem('token');\n  const request = await fetch('https://localhost:8080/api/token', {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  if (!request.ok) {\n    localStorage.clear();\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","routesConfig","ACCESS_LEVELS","UnauthorizedPage","jsxDEV","_jsxDEV","App","token","localStorage","getItem","role","synchronizeToken","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","filteredRoutes","PUBLIC","filter","r","access","USER","map","rout","_c","request","fetch","method","headers","ok","clear","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/js/App.js"],"sourcesContent":["import { Routes, Route } from \"react-router\";\r\nimport { routesConfig, ACCESS_LEVELS } from \"../common/routes\";\r\nimport { UnauthorizedPage } from \"./pages/UnauthorizedPage\";\r\n\r\n\r\nexport function App() {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n\r\n    synchronizeToken()\r\n\r\n    if (!token || !role) {\r\n        return (\r\n            <Routes>\r\n                <Route path=\"/*\" element={<UnauthorizedPage />} />\r\n            </Routes>\r\n        );\r\n    }\r\n    let filteredRoutes = [...routesConfig];\r\n\r\n    if (role === ACCESS_LEVELS.PUBLIC) {\r\n        filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC);\r\n    }\r\n    else if (role === ACCESS_LEVELS.USER) {\r\n        filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC || r.access === ACCESS_LEVELS.USER);\r\n    }\r\n\r\n    return (\r\n        <Routes>\r\n            {filteredRoutes.map((rout) => (\r\n                <Route key={rout.path} path={rout.path} element={rout.element} />\r\n            ))}\r\n        </Routes>\r\n    );\r\n}\r\n\r\nasync function synchronizeToken() {\r\n    const token = localStorage.getItem('token')\r\n    const request = await fetch('https://localhost:8080/api/token', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    if (!request.ok) {\r\n        localStorage.clear()\r\n    }\r\n}"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,OAAO,SAASC,GAAGA,CAAA,EAAG;EAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEzCE,gBAAgB,CAAC,CAAC;EAElB,IAAI,CAACJ,KAAK,IAAI,CAACG,IAAI,EAAE;IACjB,oBACIL,OAAA,CAACN,MAAM;MAAAa,QAAA,eACHP,OAAA,CAACL,KAAK;QAACa,IAAI,EAAC,IAAI;QAACC,OAAO,eAAET,OAAA,CAACF,gBAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEjB;EACA,IAAIC,cAAc,GAAG,CAAC,GAAGlB,YAAY,CAAC;EAEtC,IAAIS,IAAI,KAAKR,aAAa,CAACkB,MAAM,EAAE;IAC/BD,cAAc,GAAGA,cAAc,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKrB,aAAa,CAACkB,MAAM,CAAC;EAClF,CAAC,MACI,IAAIV,IAAI,KAAKR,aAAa,CAACsB,IAAI,EAAE;IAClCL,cAAc,GAAGA,cAAc,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKrB,aAAa,CAACkB,MAAM,IAAIE,CAAC,CAACC,MAAM,KAAKrB,aAAa,CAACsB,IAAI,CAAC;EACrH;EAEA,oBACInB,OAAA,CAACN,MAAM;IAAAa,QAAA,EACFO,cAAc,CAACM,GAAG,CAAEC,IAAI,iBACrBrB,OAAA,CAACL,KAAK;MAAiBa,IAAI,EAAEa,IAAI,CAACb,IAAK;MAACC,OAAO,EAAEY,IAAI,CAACZ;IAAQ,GAAlDY,IAAI,CAACb,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB;AAACS,EAAA,GA7BerB,GAAG;AA+BnB,eAAeK,gBAAgBA,CAAA,EAAG;EAC9B,MAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMmB,OAAO,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAC5DC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAE,SAAS,GAAGxB;IACjC;EACJ,CAAC,CAAC;EACF,IAAI,CAACqB,OAAO,CAACI,EAAE,EAAE;IACbxB,YAAY,CAACyB,KAAK,CAAC,CAAC;EACxB;AACJ;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}