{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kheragacy\\\\source\\\\repos\\\\KtsWebApp\\\\KtsWebApp\\\\react-app\\\\src\\\\js\\\\App.js\";\nimport { Routes, Route } from \"react-router\";\nimport { routesConfig, ACCESS_LEVELS } from \"../common/routes\";\nimport { UnauthorizedPage } from \"./pages/UnauthorizedPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  localStorage.setItem(\"role\", \"2\");\n  const token = localStorage.getItem('token');\n  const role = localStorage.getItem('role');\n  if (token === null || role === null) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(UnauthorizedPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  let filteredRoutes = [...routesConfig];\n  if (role === ACCESS_LEVELS.PUBLIC) {\n    filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC);\n  } else if (role === ACCESS_LEVELS.USER) {\n    filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC || r.access === ACCESS_LEVELS.USER);\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: filteredRoutes.map(rout => /*#__PURE__*/_jsxDEV(Route, {\n      path: rout.path,\n      element: rout.element\n    }, rout.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","routesConfig","ACCESS_LEVELS","UnauthorizedPage","jsxDEV","_jsxDEV","App","localStorage","setItem","token","getItem","role","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","filteredRoutes","PUBLIC","filter","r","access","USER","map","rout","_c","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/js/App.js"],"sourcesContent":["import { Routes, Route } from \"react-router\";\r\nimport { routesConfig, ACCESS_LEVELS } from \"../common/routes\";\r\nimport { UnauthorizedPage } from \"./pages/UnauthorizedPage\";\r\n\r\n\r\nexport function App() {\r\n\r\n    localStorage.setItem(\"role\", \"2\");\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n\r\n    if (token === null || role === null) {\r\n        return <Routes>\r\n\r\n            <Route path='/*' element=<UnauthorizedPage /> />\r\n        </Routes>\r\n    }\r\n\r\n    let filteredRoutes = [...routesConfig];\r\n\r\n    if (role === ACCESS_LEVELS.PUBLIC) {\r\n        filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC);\r\n    }\r\n    else if (role === ACCESS_LEVELS.USER) {\r\n        filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC || r.access === ACCESS_LEVELS.USER);\r\n    }\r\n\r\n    return (\r\n        <Routes>\r\n            {filteredRoutes.map((rout) => (\r\n                <Route key={rout.path} path={rout.path} element={rout.element} />\r\n            ))}\r\n        </Routes>\r\n    );\r\n}"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,OAAO,SAASC,GAAGA,CAAA,EAAG;EAElBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EACjC,MAAMC,KAAK,GAAGF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGJ,YAAY,CAACG,OAAO,CAAC,MAAM,CAAC;EAEzC,IAAID,KAAK,KAAK,IAAI,IAAIE,IAAI,KAAK,IAAI,EAAE;IACjC,oBAAON,OAAA,CAACN,MAAM;MAAAa,QAAA,eAEVP,OAAA,CAACL,KAAK;QAACa,IAAI,EAAC,IAAI;QAACC,OAAO,eAACT,OAAA,CAACF,gBAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EACb;EAEA,IAAIC,cAAc,GAAG,CAAC,GAAGlB,YAAY,CAAC;EAEtC,IAAIU,IAAI,KAAKT,aAAa,CAACkB,MAAM,EAAE;IAC/BD,cAAc,GAAGA,cAAc,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKrB,aAAa,CAACkB,MAAM,CAAC;EAClF,CAAC,MACI,IAAIT,IAAI,KAAKT,aAAa,CAACsB,IAAI,EAAE;IAClCL,cAAc,GAAGA,cAAc,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKrB,aAAa,CAACkB,MAAM,IAAIE,CAAC,CAACC,MAAM,KAAKrB,aAAa,CAACsB,IAAI,CAAC;EACrH;EAEA,oBACInB,OAAA,CAACN,MAAM;IAAAa,QAAA,EACFO,cAAc,CAACM,GAAG,CAAEC,IAAI,iBACrBrB,OAAA,CAACL,KAAK;MAAiBa,IAAI,EAAEa,IAAI,CAACb,IAAK;MAACC,OAAO,EAAEY,IAAI,CAACZ;IAAQ,GAAlDY,IAAI,CAACb,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB;AAACS,EAAA,GA7BerB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}