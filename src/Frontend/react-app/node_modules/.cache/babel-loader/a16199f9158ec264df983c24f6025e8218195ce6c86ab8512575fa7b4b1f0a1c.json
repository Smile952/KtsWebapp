{"ast":null,"code":"export async function AdminUsers() {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch('https://localhost:8080/api/users', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    let res = await response.json();\n    if (!Array.isArray(res) || res.length === 0) {\n      res = [{\n        id: -1,\n        name: 'empty',\n        email: 'empty@example.com',\n        age: 0,\n        registrationDate: '1000-01-01T00:00:00Z'\n      }];\n    }\n    return res;\n  } catch (error) {\n    if (error.message.includes('Failed to fetch')) {\n      console.error('Connection refused: Could not connect to the server (net::ERR_CONNECTION_REFUSED)');\n    } else {\n      console.error('Failed to fetch data from the server:', error.message);\n    }\n    return [{\n      id: -1,\n      name: 'empty',\n      email: 'empty@example.com',\n      age: 0,\n      registrationDate: '1000-01-01T00:00:00Z'\n    }];\n  }\n}\n_c = AdminUsers;\nvar _c;\n$RefreshReg$(_c, \"AdminUsers\");","map":{"version":3,"names":["AdminUsers","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","Error","status","res","json","Array","isArray","length","id","name","email","age","registrationDate","error","message","includes","console","_c","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/components/Admin/Users/AdminUsers.ts"],"sourcesContent":["export interface User {\r\n    id: number\r\n    name: string\r\n    email: string\r\n    age: number\r\n    registrationDate: string\r\n}\r\n\r\nexport async function AdminUsers(): Promise<User[]> {\r\n    try {\r\n        const token = localStorage.getItem('token')\r\n        const response = await fetch('https://localhost:8080/api/users', {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`)\r\n        }\r\n\r\n        let res: User[] = await response.json()\r\n\r\n        if (!Array.isArray(res) || res.length === 0) {\r\n            res = [\r\n                {\r\n                    id: -1,\r\n                    name: 'empty',\r\n                    email: 'empty@example.com',\r\n                    age: 0,\r\n                    registrationDate: '1000-01-01T00:00:00Z',\r\n                },\r\n            ]\r\n        }\r\n\r\n        return res\r\n    } catch (error: any) {\r\n        if (error.message.includes('Failed to fetch')) {\r\n            console.error(\r\n                'Connection refused: Could not connect to the server (net::ERR_CONNECTION_REFUSED)'\r\n            )\r\n        } else {\r\n            console.error('Failed to fetch data from the server:', error.message)\r\n        }\r\n\r\n        return [\r\n            {\r\n                id: -1,\r\n                name: 'empty',\r\n                email: 'empty@example.com',\r\n                age: 0,\r\n                registrationDate: '1000-01-01T00:00:00Z',\r\n            },\r\n        ]\r\n    }\r\n}\r\n"],"mappings":"AAQA,OAAO,eAAeA,UAAUA,CAAA,EAAoB;EAChD,IAAI;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUP,KAAK;MAClC;IACJ,CAAC,CAAC;IACF,IAAI,CAACG,QAAQ,CAACK,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;IAC7D;IAEA,IAAIC,GAAW,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAEvC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,IAAIA,GAAG,CAACI,MAAM,KAAK,CAAC,EAAE;MACzCJ,GAAG,GAAG,CACF;QACIK,EAAE,EAAE,CAAC,CAAC;QACNC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,mBAAmB;QAC1BC,GAAG,EAAE,CAAC;QACNC,gBAAgB,EAAE;MACtB,CAAC,CACJ;IACL;IAEA,OAAOT,GAAG;EACd,CAAC,CAAC,OAAOU,KAAU,EAAE;IACjB,IAAIA,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MAC3CC,OAAO,CAACH,KAAK,CACT,mFACJ,CAAC;IACL,CAAC,MAAM;MACHG,OAAO,CAACH,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAACC,OAAO,CAAC;IACzE;IAEA,OAAO,CACH;MACIN,EAAE,EAAE,CAAC,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,mBAAmB;MAC1BC,GAAG,EAAE,CAAC;MACNC,gBAAgB,EAAE;IACtB,CAAC,CACJ;EACL;AACJ;AAACK,EAAA,GA/CqB1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}