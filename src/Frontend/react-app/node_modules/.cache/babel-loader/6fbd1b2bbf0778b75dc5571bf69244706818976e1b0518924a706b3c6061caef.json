{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const synchronize = createAsyncThunk('fetch', async function () {\n  const token = localStorage.getItem('token');\n  const response = await fetch('https://localhost:8080/api/token', {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const data = await response.json();\n  return data;\n});\nconst slice = createSlice({\n  name: 'api_request',\n  initialState: {\n    datas: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(synchronize.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(synchronize.fulfilled, (state, action) => {\n      state.loading = false;\n      state.datas = action.payload;\n    }).addCase(synchronize.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Unknown error';\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","synchronize","token","localStorage","getItem","response","fetch","method","headers","data","json","slice","name","initialState","datas","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/store/slice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, ActionReducerMapBuilder } from '@reduxjs/toolkit'\r\n\r\nexport const synchronize = createAsyncThunk(\r\n    'fetch',\r\n    async function () {\r\n        const token = localStorage.getItem('token')\r\n        const response = await fetch('https://localhost:8080/api/token', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n            },\r\n        });\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n)\r\n\r\ninterface State {\r\n    datas: any[];\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\n\r\nconst slice = createSlice({\r\n    name: 'api_request',\r\n    initialState: {\r\n        datas: [],\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder: ActionReducerMapBuilder<State>) => {\r\n        builder\r\n            .addCase(synchronize.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(synchronize.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.datas = action.payload;\r\n            })\r\n            .addCase(synchronize.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message || 'Unknown error';\r\n            });\r\n    }\r\n});\r\n\r\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAiC,kBAAkB;AAEzF,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CACvC,OAAO,EACP,kBAAkB;EACd,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAC7DC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,eAAe,EAAE,SAAS,GAAGN;IACjC;EACJ,CAAC,CAAC;EACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CACJ,CAAC;AASD,MAAME,KAAK,GAAGZ,WAAW,CAAC;EACtBa,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAuC,IAAK;IACxDA,OAAO,CACFC,OAAO,CAACnB,WAAW,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDI,OAAO,CAACnB,WAAW,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACnB,WAAW,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO,IAAI,eAAe;IACzD,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAehB,KAAK,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}