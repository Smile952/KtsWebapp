{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kheragacy\\\\source\\\\repos\\\\KtsWebApp\\\\KtsWebApp\\\\react-app\\\\src\\\\components\\\\Services\\\\Services.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport './Services.css';\nimport { getToken } from '../Auth/login';\nimport { Unauthorized } from '../Unauthorized/Unauthorized';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Services() {\n  _s();\n  const token = localStorage.getItem('token');\n\n  // Используем useState для управления состоянием\n  const [isAuthorized, setIsAuthorized] = useState(!!token);\n\n  // Проверка авторизации должна быть после всех хуков\n\n  const [blocks, setBlocks] = useState([{\n    id: 1,\n    title: 'Web Разработка',\n    description: 'Создание и разработка современных сайтов и приложений',\n    photo: ''\n  }, {\n    id: 2,\n    title: 'Android/iOS',\n    description: 'Разработка приложений для iOS и Android',\n    photo: ''\n  }, {\n    id: 3,\n    title: 'DevOps и облако',\n    description: 'Настройка инфраструктуры и автоматизация процессов',\n    photo: ''\n  }]);\n  useEffect(() => {\n    getImagesNames().then(result => {\n      const updated = [...blocks];\n      updated[1].photo = result[\"ImagesData\"][0]['ImageURL'];\n      updated[2].photo = result[\"ImagesData\"][1]['ImageURL'];\n      updated[0].photo = result[\"ImagesData\"][2]['ImageURL'];\n      setBlocks(updated);\n    }).catch(error => console.log('Ошибка при получении изображений: ', error));\n  }, []);\n  const nav = useNavigate();\n  const handler = (id, block) => {\n    nav(`/about/${id}`, {\n      state: block\n    });\n  };\n  if (!isAuthorized) {\n    return /*#__PURE__*/_jsxDEV(Unauthorized, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blocks\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blocks-group\",\n      children: blocks.map(block => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handler(block.id, block),\n        className: \"back-blocks\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"front-blocks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blocks-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blocks-title\",\n              children: block.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blocks-description\",\n              children: block.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blocks-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"blocks-image-source\",\n                src: block.photo,\n                alt: block.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Services, \"qQZPSIdARmD92B6d7J71u772zvw=\", false, function () {\n  return [useNavigate];\n});\n_c = Services;\nasync function getImagesNames() {\n  var token = localStorage.getItem('token');\n  var res = await fetch(\"https://localhost:8080/api/minio/images\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  var ans = await res.json();\n  return ans;\n}\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["useNavigate","useEffect","useState","getToken","Unauthorized","jsxDEV","_jsxDEV","Services","_s","token","localStorage","getItem","isAuthorized","setIsAuthorized","blocks","setBlocks","id","title","description","photo","getImagesNames","then","result","updated","catch","error","console","log","nav","handler","block","state","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","onClick","src","alt","_c","res","fetch","method","headers","ans","json","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/components/Services/Services.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport './Services.css'\r\nimport { getToken } from '../Auth/login';\r\nimport { Unauthorized } from '../Unauthorized/Unauthorized';\r\n\r\nexport function Services() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Используем useState для управления состоянием\r\n    const [isAuthorized, setIsAuthorized] = useState(!!token);\r\n\r\n    // Проверка авторизации должна быть после всех хуков\r\n\r\n\r\n    const [blocks, setBlocks] = useState([\r\n        { id: 1, title: 'Web Разработка', description: 'Создание и разработка современных сайтов и приложений', photo: '' },\r\n        { id: 2, title: 'Android/iOS', description: 'Разработка приложений для iOS и Android', photo: '' },\r\n        { id: 3, title: 'DevOps и облако', description: 'Настройка инфраструктуры и автоматизация процессов', photo: '' }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getImagesNames()\r\n            .then(result => {\r\n                const updated = [...blocks];\r\n                updated[1].photo = result[\"ImagesData\"][0]['ImageURL'];\r\n                updated[2].photo = result[\"ImagesData\"][1]['ImageURL'];\r\n                updated[0].photo = result[\"ImagesData\"][2]['ImageURL'];\r\n                setBlocks(updated);\r\n            })\r\n            .catch(error => console.log('Ошибка при получении изображений: ', error));\r\n    }, [])\r\n\r\n    const nav = useNavigate()\r\n\r\n    const handler = (id, block) => {\r\n        nav(`/about/${id}`, { state: block })\r\n    }\r\n    if (!isAuthorized) {\r\n        return <Unauthorized />;\r\n    }\r\n    return (\r\n        <div className='blocks'>\r\n            <div className='blocks-group'>\r\n                {blocks.map(block => (\r\n                    <div key={block.id} onClick={() => handler(block.id, block)} className='back-blocks'>\r\n                        <div className=\"front-blocks\">\r\n                            <div className='blocks-text'>\r\n                                <div className=\"blocks-title\">{block.title}</div>\r\n                                <div className=\"blocks-description\">{block.description}</div>\r\n                                <div className=\"blocks-image\">\r\n                                    <img className=\"blocks-image-source\" src={block.photo} alt={block.title} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nasync function getImagesNames() {\r\n    var token = localStorage.getItem('token')\r\n    var res = await fetch(\"https://localhost:8080/api/minio/images\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n    var ans = await res.json()\r\n    return ans\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}