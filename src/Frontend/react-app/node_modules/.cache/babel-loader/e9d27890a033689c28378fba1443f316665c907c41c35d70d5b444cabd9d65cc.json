{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kheragacy\\\\source\\\\repos\\\\KtsWebApp\\\\src\\\\Frontend\\\\react-app\\\\src\\\\components\\\\Services\\\\Services.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport './Services.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Services() {\n  _s();\n  const [blocks, setBlocks] = useState([{\n    id: 1,\n    title: 'Web Разработка',\n    description: 'Создание и разработка современных сайтов и приложений',\n    photo: '/src/Frontend/react-app/public/Images/WebDev/web-development.jpg'\n  }, {\n    id: 2,\n    title: 'Android/iOS',\n    description: 'Разработка приложений для iOS и Android',\n    photo: 'src\\\\Frontend\\\\react-app\\\\public\\\\Images\\\\Mobile\\\\android.jpg'\n  }, {\n    id: 3,\n    title: 'DevOps и облако',\n    description: 'Настройка инфраструктуры и автоматизация процессов',\n    photo: 'src\\\\Frontend\\\\react-app\\\\public\\\\Images\\\\DevOps\\\\devops.jpg'\n  }]);\n  const nav = useNavigate();\n\n  // useEffect(() => {\n  //     getImagesNames()\n  //         .then(result => {\n  //             const updated = [...blocks];\n  //             if (result?.ImagesData?.length >= 3) {\n  //                 updated[1].photo = result.ImagesData[0].ImageURL;\n  //                 updated[2].photo = result.ImagesData[1].ImageURL;\n  //                 updated[0].photo = result.ImagesData[2].ImageURL;\n  //                 // setBlocks(updated);\n  //             }\n  //         })\n  //         .catch(error => console.log('Ошибка при получении изображений: ', error));\n  // }, []);\n\n  const handler = (id, block) => {\n    nav(`/about/${id}`, {\n      state: block\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blocks\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blocks-group\",\n      children: blocks.map(block => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handler(block.id, block),\n        className: \"back-blocks\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"front-blocks\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blocks-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blocks-title\",\n              children: block.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blocks-description\",\n              children: block.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blocks-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"blocks-image-source\",\n                src: block.photo,\n                alt: block.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Services, \"P7OegzbPLS6ZHDLcm4pjmVamgTM=\", false, function () {\n  return [useNavigate];\n});\n_c = Services;\nasync function getImagesNames() {\n  const token = localStorage.getItem('token');\n  const res = await fetch(\"http://localhost:8080/api/minio/images\", {\n    method: \"GET\",\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  if (!res.ok) {\n    throw new Error('Failed to fetch images');\n  }\n  const ans = await res.json();\n  return ans;\n}\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["useNavigate","useState","jsxDEV","_jsxDEV","Services","_s","blocks","setBlocks","id","title","description","photo","nav","handler","block","state","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","getImagesNames","token","localStorage","getItem","res","fetch","method","headers","ok","Error","ans","json","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/src/Frontend/react-app/src/components/Services/Services.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport './Services.css';\r\n\r\ninterface Block {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    photo: string;\r\n}\r\n\r\ninterface ImagesDataItem {\r\n    ImageURL: string;\r\n}\r\n\r\ninterface ImagesResponse {\r\n    ImagesData: ImagesDataItem[];\r\n}\r\n\r\nexport function Services() {\r\n    const [blocks, setBlocks] = useState<Block[]>([\r\n        { id: 1, title: 'Web Разработка', description: 'Создание и разработка современных сайтов и приложений', photo: '/src/Frontend/react-app/public/Images/WebDev/web-development.jpg' },\r\n        { id: 2, title: 'Android/iOS', description: 'Разработка приложений для iOS и Android', photo: 'src\\\\Frontend\\\\react-app\\\\public\\\\Images\\\\Mobile\\\\android.jpg' },\r\n        { id: 3, title: 'DevOps и облако', description: 'Настройка инфраструктуры и автоматизация процессов', photo: 'src\\\\Frontend\\\\react-app\\\\public\\\\Images\\\\DevOps\\\\devops.jpg' }\r\n    ]);\r\n\r\n    const nav = useNavigate();\r\n\r\n    // useEffect(() => {\r\n    //     getImagesNames()\r\n    //         .then(result => {\r\n    //             const updated = [...blocks];\r\n    //             if (result?.ImagesData?.length >= 3) {\r\n    //                 updated[1].photo = result.ImagesData[0].ImageURL;\r\n    //                 updated[2].photo = result.ImagesData[1].ImageURL;\r\n    //                 updated[0].photo = result.ImagesData[2].ImageURL;\r\n    //                 // setBlocks(updated);\r\n    //             }\r\n    //         })\r\n    //         .catch(error => console.log('Ошибка при получении изображений: ', error));\r\n    // }, []);\r\n\r\n    const handler = (id: number, block: Block) => {\r\n        nav(`/about/${id}`, { state: block });\r\n    };\r\n\r\n    return (\r\n        <div className='blocks'>\r\n            <div className='blocks-group'>\r\n                {blocks.map(block => (\r\n                    <div key={block.id} onClick={() => handler(block.id, block)} className='back-blocks'>\r\n                        <div className=\"front-blocks\">\r\n                            <div className='blocks-text'>\r\n                                <div className=\"blocks-title\">{block.title}</div>\r\n                                <div className=\"blocks-description\">{block.description}</div>\r\n                                <div className=\"blocks-image\">\r\n                                    <img className=\"blocks-image-source\" src={block.photo} alt={block.title} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function getImagesNames(): Promise<ImagesResponse> {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(\"http://localhost:8080/api/minio/images\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token,\r\n        },\r\n    });\r\n\r\n    if (!res.ok) {\r\n        throw new Error('Failed to fetch images');\r\n    }\r\n\r\n    const ans = await res.json();\r\n    return ans;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}