{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from '@reduxjs/toolkit';\nimport synchronize from './slice'; // Путь к вашему слайсу\nimport { useDispatch, useSelector } from 'react-redux';\nexport const store = configureStore({\n  reducer: {\n    apiRequest: synchronize // Подключаем слайс\n  }\n});\n// Создаем типизированную версию хука\nexport const useAppSelector = useSelector;\n\n// Типизируем dispatch\n\n// Создаем типизированную версию хука\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["configureStore","synchronize","useDispatch","useSelector","store","reducer","apiRequest","useAppSelector","useAppDispatch","_s"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/src/Frontend/react-app/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport synchronize from './slice'; // Путь к вашему слайсу\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        apiRequest: synchronize, // Подключаем слайс\r\n    },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n// Создаем типизированную версию хука\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n// Типизируем dispatch\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// Создаем типизированную версию хука\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,SAAS,CAAC,CAAC;AACnC,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAE5E,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAChCK,OAAO,EAAE;IACLC,UAAU,EAAEL,WAAW,CAAE;EAC7B;AACJ,CAAC,CAAC;AAIF;AACA,OAAO,MAAMM,cAA+C,GAAGJ,WAAW;;AAE1E;;AAGA;AACA,OAAO,MAAMK,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,WAAW,CAAc,CAAC;AAAA;AAACO,EAAA,CAAlDD,cAAc;EAAA,QAASN,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}