{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kheragacy\\\\source\\\\repos\\\\KtsWebApp\\\\KtsWebApp\\\\react-app\\\\src\\\\js\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { Routes, Route } from \"react-router\";\nimport { routesConfig, ACCESS_LEVELS } from \"../../routes\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// тип роли из ACCESS_LEVELS\n\nexport function App() {\n  _s();\n  const [token, setToken] = useState(undefined);\n  const [role, setRole] = useState(undefined);\n  let filteredRoutes = [...routesConfig];\n  if (role === ACCESS_LEVELS.PUBLIC) {\n    filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC);\n  } else if (role === ACCESS_LEVELS.USER) {\n    filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC || r.access === ACCESS_LEVELS.USER);\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: filteredRoutes.map(rout => /*#__PURE__*/_jsxDEV(Route, {\n      path: rout.path,\n      element: rout.element\n    }, rout.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9OyyG1dGEGXYUIj+bFoqJb53rEo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","routesConfig","ACCESS_LEVELS","useState","jsxDEV","_jsxDEV","App","_s","token","setToken","undefined","role","setRole","filteredRoutes","PUBLIC","filter","r","access","USER","children","map","rout","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/js/App.tsx"],"sourcesContent":["import { Routes, Route } from \"react-router\";\r\nimport { routesConfig, ACCESS_LEVELS } from \"../../routes\";\r\nimport { JSX, useState } from \"react\";\r\n\r\ntype RoleType = typeof ACCESS_LEVELS[keyof typeof ACCESS_LEVELS]; // тип роли из ACCESS_LEVELS\r\n\r\nexport function App(): JSX.Element {\r\n    const [token, setToken] = useState<string | undefined>(undefined);\r\n    const [role, setRole] = useState<RoleType | undefined>(undefined);\r\n\r\n    let filteredRoutes = [...routesConfig];\r\n\r\n    if (role === ACCESS_LEVELS.PUBLIC) {\r\n        filteredRoutes = filteredRoutes.filter(r => r.access === ACCESS_LEVELS.PUBLIC);\r\n    } else if (role === ACCESS_LEVELS.USER) {\r\n        filteredRoutes = filteredRoutes.filter(r =>\r\n            r.access === ACCESS_LEVELS.PUBLIC || r.access === ACCESS_LEVELS.USER\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Routes>\r\n            {filteredRoutes.map((rout) => (\r\n                <Route key={rout.path} path={rout.path} element={rout.element} />\r\n            ))}\r\n        </Routes>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,aAAa,QAAQ,cAAc;AAC1D,SAAcC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE4B;;AAElE,OAAO,SAASC,GAAGA,CAAA,EAAgB;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAqBO,SAAS,CAAC;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAuBO,SAAS,CAAC;EAEjE,IAAIG,cAAc,GAAG,CAAC,GAAGZ,YAAY,CAAC;EAEtC,IAAIU,IAAI,KAAKT,aAAa,CAACY,MAAM,EAAE;IAC/BD,cAAc,GAAGA,cAAc,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKf,aAAa,CAACY,MAAM,CAAC;EAClF,CAAC,MAAM,IAAIH,IAAI,KAAKT,aAAa,CAACgB,IAAI,EAAE;IACpCL,cAAc,GAAGA,cAAc,CAACE,MAAM,CAACC,CAAC,IACpCA,CAAC,CAACC,MAAM,KAAKf,aAAa,CAACY,MAAM,IAAIE,CAAC,CAACC,MAAM,KAAKf,aAAa,CAACgB,IACpE,CAAC;EACL;EAEA,oBACIb,OAAA,CAACN,MAAM;IAAAoB,QAAA,EACFN,cAAc,CAACO,GAAG,CAAEC,IAAI,iBACrBhB,OAAA,CAACL,KAAK;MAAiBsB,IAAI,EAAED,IAAI,CAACC,IAAK;MAACC,OAAO,EAAEF,IAAI,CAACE;IAAQ,GAAlDF,IAAI,CAACC,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB;AAACpB,EAAA,CArBeD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}