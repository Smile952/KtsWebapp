{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { synchronizeToken } from '../common/synchronizeToken';\nconst initialState = {\n  token: null,\n  role: null,\n  isLoading: false,\n  error: null\n};\nexport const verifyToken = createAsyncThunk('auth/verifyToken', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const isValid = await synchronizeToken();\n    if (!isValid) throw new Error('Invalid token');\n    return {\n      token: localStorage.getItem('token'),\n      role: localStorage.getItem('role')\n    };\n  } catch (error) {\n    return rejectWithValue('Token verification failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(verifyToken.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(verifyToken.fulfilled, (state, action) => {\n      state.token = action.payload.token;\n      state.role = action.payload.role;\n      state.isLoading = false;\n    }).addCase(verifyToken.rejected, (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n      state.token = null;\n      state.role = null;\n    });\n  }\n});\nexport const selectAuth = state => state.auth;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","synchronizeToken","initialState","token","role","isLoading","error","verifyToken","_","rejectWithValue","isValid","Error","localStorage","getItem","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectAuth","auth","reducer"],"sources":["C:/Users/Kheragacy/source/repos/KtsWebApp/KtsWebApp/react-app/src/store/slice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { synchronizeToken } from '../common/synchronizeToken';\r\nimport { RootState } from 'store';\r\n\r\ninterface AuthState {\r\n    token: string | null;\r\n    role: string | null;\r\n    isLoading: boolean;\r\n    error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    token: null,\r\n    role: null,\r\n    isLoading: false,\r\n    error: null\r\n};\r\n\r\nexport const verifyToken = createAsyncThunk(\r\n    'auth/verifyToken',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const isValid = await synchronizeToken();\r\n            if (!isValid) throw new Error('Invalid token');\r\n\r\n            return {\r\n                token: localStorage.getItem('token'),\r\n                role: localStorage.getItem('role')\r\n            };\r\n        } catch (error) {\r\n            return rejectWithValue('Token verification failed');\r\n        }\r\n    }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(verifyToken.pending, (state) => {\r\n                state.isLoading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(verifyToken.fulfilled, (state, action) => {\r\n                state.token = action.payload.token;\r\n                state.role = action.payload.role;\r\n                state.isLoading = false;\r\n            })\r\n            .addCase(verifyToken.rejected, (state, action) => {\r\n                state.error = action.payload as string;\r\n                state.isLoading = false;\r\n                state.token = null;\r\n                state.role = null;\r\n            });\r\n    }\r\n});\r\n\r\nexport const selectAuth = (state: RootState) => state.auth;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,gBAAgB,QAAQ,4BAA4B;AAU7D,MAAMC,YAAuB,GAAG;EAC5BC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGP,gBAAgB,CACvC,kBAAkB,EAClB,OAAOQ,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC9B,IAAI;IACA,MAAMC,OAAO,GAAG,MAAMT,gBAAgB,CAAC,CAAC;IACxC,IAAI,CAACS,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAE9C,OAAO;MACHR,KAAK,EAAES,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACpCT,IAAI,EAAEQ,YAAY,CAACC,OAAO,CAAC,MAAM;IACrC,CAAC;EACL,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,OAAOG,eAAe,CAAC,2BAA2B,CAAC;EACvD;AACJ,CACJ,CAAC;AAED,MAAMK,SAAS,GAAGf,WAAW,CAAC;EAC1BgB,IAAI,EAAE,MAAM;EACZb,YAAY;EACZc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,WAAW,CAACa,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACf,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDa,OAAO,CAACZ,WAAW,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO,CAACrB,KAAK;MAClCkB,KAAK,CAACjB,IAAI,GAAGmB,MAAM,CAACC,OAAO,CAACpB,IAAI;MAChCiB,KAAK,CAAChB,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC,CACDc,OAAO,CAACZ,WAAW,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACC,OAAiB;MACtCH,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAAClB,KAAK,GAAG,IAAI;MAClBkB,KAAK,CAACjB,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMsB,UAAU,GAAIL,KAAgB,IAAKA,KAAK,CAACM,IAAI;AAC1D,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}