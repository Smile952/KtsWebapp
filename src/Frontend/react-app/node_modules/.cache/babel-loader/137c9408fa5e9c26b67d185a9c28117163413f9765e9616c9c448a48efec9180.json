{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"ownerState\"];\nimport * as React from 'react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { PickersActionBar } from \"../PickersActionBar/index.js\";\nimport { getPickersLayoutUtilityClass } from \"./pickersLayoutClasses.js\";\nimport { PickersShortcuts } from \"../PickersShortcuts/index.js\";\nimport { usePickerPrivateContext } from \"../internals/hooks/usePickerPrivateContext.js\";\nimport { usePickerContext } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction toolbarHasView(toolbarProps) {\n  return toolbarProps.view !== null;\n}\nconst useUtilityClasses = (classes, ownerState) => {\n  const {\n    pickerOrientation\n  } = ownerState;\n  const slots = {\n    root: ['root', pickerOrientation === 'landscape' && 'landscape'],\n    contentWrapper: ['contentWrapper'],\n    toolbar: ['toolbar'],\n    actionBar: ['actionBar'],\n    tabs: ['tabs'],\n    landscape: ['landscape'],\n    shortcuts: ['shortcuts']\n  };\n  return composeClasses(slots, getPickersLayoutUtilityClass, classes);\n};\nconst usePickerLayout = props => {\n  const {\n    ownerState: pickerOwnerState,\n    defaultActionBarActions\n  } = usePickerPrivateContext();\n  const {\n    view\n  } = usePickerContext();\n  const isRtl = useRtl();\n  const {\n    children,\n    slots,\n    slotProps,\n    classes: classesProp\n  } = props;\n  const ownerState = React.useMemo(() => _extends({}, pickerOwnerState, {\n    layoutDirection: isRtl ? 'rtl' : 'ltr'\n  }), [pickerOwnerState, isRtl]);\n  const classes = useUtilityClasses(classesProp, ownerState);\n\n  // Action bar\n  const ActionBar = slots?.actionBar ?? PickersActionBar;\n  const _useSlotProps = useSlotProps({\n      elementType: ActionBar,\n      externalSlotProps: slotProps?.actionBar,\n      additionalProps: {\n        actions: defaultActionBarActions\n      },\n      className: classes.actionBar,\n      ownerState\n    }),\n    actionBarProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded);\n  const actionBar = /*#__PURE__*/_jsx(ActionBar, _extends({}, actionBarProps));\n\n  // Toolbar\n  const Toolbar = slots?.toolbar;\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps?.toolbar,\n    className: classes.toolbar,\n    ownerState\n  });\n  const toolbar = toolbarHasView(toolbarProps) && !!Toolbar ? /*#__PURE__*/_jsx(Toolbar, _extends({}, toolbarProps)) : null;\n\n  // Content\n  const content = children;\n\n  // Tabs\n  const Tabs = slots?.tabs;\n  const tabs = view && Tabs ? /*#__PURE__*/_jsx(Tabs, _extends({\n    className: classes.tabs\n  }, slotProps?.tabs)) : null;\n\n  // Shortcuts\n  const Shortcuts = slots?.shortcuts ?? PickersShortcuts;\n  const shortcutsProps = useSlotProps({\n    elementType: Shortcuts,\n    externalSlotProps: slotProps?.shortcuts,\n    className: classes.shortcuts,\n    ownerState\n  });\n  const shortcuts = view && !!Shortcuts ? /*#__PURE__*/_jsx(Shortcuts, _extends({}, shortcutsProps)) : null;\n  return {\n    toolbar,\n    content,\n    tabs,\n    actionBar,\n    shortcuts,\n    ownerState\n  };\n};\nexport default usePickerLayout;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}